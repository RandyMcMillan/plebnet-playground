#!/bin/bash

#To calculate nbits
#cd ~/bitcoin && \
#$ ./contrib/signet/miner --cli="./src/bitcoin-cli" calibrate --grind-cmd="./src/bitcoin-util grind" --seconds=600
#$ $nbits=1d03cca1 #for 600s average mining time
#$ ./contrib/signet/miner --cli="./src/bitcoin-cli -datadir=$datadir" generate --address $ADDR --grind-cmd="./src/bitcoin-util grind" --nbits=$nbits --ongoing


minenewblock(){
#sleep 570;
bitcoin-cli -signet -rpcwallet=playground-wallet getblocktemplate '{"rules": ["signet","segwit"]}' |
      ~/bitcoin/contrib/signet/miner --cli="bitcoin-cli" genpsbt --address="tb1q47e90hgdamccka8p86ja2sfa9apqx4p6xh4mt5" |
      bitcoin-cli -signet -rpcwallet=playground-wallet  -stdin walletprocesspsbt |
      jq -r .psbt |
      ~/bitcoin/contrib/signet/miner --cli="bitcoin-cli" solvepsbt --grind-cmd="bitcoin-util grind" |
      bitcoin-cli -signet -rpcwallet=playground-wallet  -stdin submitblock
  }


#BEGIN OF OBJECT
mkdir -p /tmp/blocknotify
LOG_DIR=/tmp/blocknotify

init(){
echo "{"
echo "\"blocknotify\":["
echo "{"
echo "\"time\":\"$(date +%s)\""
echo "},"

BITCOIN_CLI=$(which bitcoin-cli)
export BITCOIN_CLI
#echo $BITCOIN_CLI

if [[ ! -z "$BITCOIN_CLI" ]]; then
    $(bitcoin-cli createwallet playground-wallet > /dev/null 2>&1)
    SELF_ADDRESS=$(bitcoin-cli -rpcwallet=playground-wallet getnewaddress)
    export SELF_ADDRESS
    echo { \"SELF_ADDRESS\": \"$SELF_ADDRESS\" },
fi

PLAY_BITCOIN_ADDRESS=$(play-bitcoin getnewaddress)
export PLAY_BITCOIN_ADDRESS
echo { \"PLAY_BITCOIN_ADDRESS\": \"$PLAY_BITCOIN_ADDRESS\" },
}
init

host-cli-automate(){
################################################################################
play-getcoins -a $( echo  play-getcoins -a tb1qu7cc9q5xwgc4ygunf98sy0ul8r9tpwr6zt8pk3 -r true) > /dev/null 2>&1

#settxfee always less than 0.1000
echo "{ \"\$count\$k\$j\": \"$count$k$j\" },"

echo "{ \"settxfee 0.00$count$k$j\": \"$(bitcoin-cli -rpcwallet=playground-wallet settxfee 0.00$count$k$j)\" }," > /dev/null 2>&1
#UNAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet sendtoaddress "$PLAY_BITCOIN_ADDRESS"  0.001$count$k$j) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1
#NAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet -named sendtoaddress address="$PLAY_BITCOIN_ADDRESS" amount=0.01$count$k$j comment=$TIME-$count-$k-$j ) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1

#UNAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet sendtoaddress "$PLAY_BITCOIN_ADDRESS"  0.001$count$k$j) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1
#NAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet -named sendtoaddress address="$PLAY_BITCOIN_ADDRESS" amount=0.01$count$k$j comment=$TIME-$count-$k-$j ) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1

#UNAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet sendtoaddress "$PLAY_BITCOIN_ADDRESS"  0.001$count$k$j) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1
#NAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet -named sendtoaddress address="$PLAY_BITCOIN_ADDRESS" amount=0.$count$k$j comment=$TIME-$count-$k-$j ) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1

#UNAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet sendtoaddress "$PLAY_BITCOIN_ADDRESS"  0.001$count$k$j) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1
#NAMED
TXHASH=$(bitcoin-cli  -rpcwallet=playground-wallet -named sendtoaddress address="$PLAY_BITCOIN_ADDRESS" amount=0.01$count$k$j comment=$TIME-$count-$k-$j ) > /dev/null 2>&1
echo "{ \"TXHASH\": \"$TXHASH\" }," > /dev/null 2>&1

play-bitcoin 'bitcoin-cli -rpcwallet=playground-wallet settxfee 0.0$count$k$j'
play-bitcoin sendtoaddress playground-wallet $SELF_ADDRESS 0.1

}
end_time(){
echo "{ \"END_TIME\": $(date +%s) }]}"
}
################################################################################
for (( i = 1; i <= 200; i++ ))    ### i loop
do
    export i
    for (( j = 1 ; j <= 9; j++ )) ### j loop
    do
        export j
            padtowidth=$j
            for z in 0 {1..30} {30..100}; do
                k=$(printf "%0*d\n" $padtowidth $z;)
                export k
                #echo "},"
                echo "{ \"inner-loop\": ["
                #trap1
                trap 'end_time; exit' SIGINT SIGQUIT
                count=0
                while :
                do
                    sleep 1
                    count=$(expr $count + 1)
                    export count
                    echo "{ \"count\": \"$count\" },"
                    echo "{ \"i\": \"$i\" },"
                    echo "{ \"j\": \"$j\" },"
                    echo "{ \"k\": \"$k\" },"

                    host-cli-automate
                    echo $(bitcoin-cli  -rpcwallet=playground-wallet getbalances),
                    echo $(play-bitcoin getbalances),

                done
        done
    done
done
blocknotify
#